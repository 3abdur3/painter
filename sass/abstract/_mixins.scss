// ****To center an block element inside another blobk element****
@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  // This two -50% are width and height of the element, not from parent
}

// ******  MEDIA QUERY MANAGER   ********
/*
0 - 600PX:     Phone
600 - 900px:   Tablet portrait
900 - 1200px:  Tablet Landscape
**1200 - 1800px: Is where our normal styles applyes (Desktop). 
1800px +: Big Desktop  (From here we need to use "min-width, because our normal creatd size is smaller size than big-desktop)

$breakpoint(a parameter here) argument choices:
- phone
- Tab-port
- Tab-land
- Big-desktop

ORDER: Base + typography > general layout + grid > specific pagelay out > componants
*/

/* Here '@content' directive allows us to pass a block of code into mixin
Here '@if' is also a directive */
//'em'(1em=16px) is the best option for media-query. 'Rem' fail to work in some browsers
@mixin respond($breakpoint) {
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: $big-desktop) {
      @content;
    }
  }

  @if $breakpoint == laptop {
    @media only screen and (max-width: $laptop) {
      @content;
    }
  }

  @if $breakpoint == tab-land {
    @media only screen and (max-width: $tab-land) {
      @content;
    }
  }

  @if $breakpoint == tab-port {
    @media only screen and (max-width: $tab-port) {
      @content;
    }
  }

  @if $breakpoint == large-phone {
    @media only screen and (max-width: $large-phone) {
      @content;
    }
  }

  @if $breakpoint == normal-phone {
    @media only screen and (max-width: $normal-phone) {
      @content;
    }
  }

  @if $breakpoint == small-phone {
    @media only screen and (max-width: $small-phone) {
      @content;
    }
  }

  @if $breakpoint == smallest-phone {
    @media only screen and (max-width: $smallest-phone) {
      @content;
    }
  }

  // FOR HAMBURGER MENU ACTIVATION
  @if $breakpoint == tablet {
    @media only screen and (min-width: $tab-port) {
      @content;
    }
  }
}
